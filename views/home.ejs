<%- include('partials/header'); -%>
<head>
  <script src="https://www.gstatic.com/firebasejs/8.3.2/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/8.3.2/firebase-storage.js"></script>
</head>
<div class="container" style="margin: auto; margin-bottom: 20px; border-radius: 20px; box-shadow:3px 3px 0px 3px #0e0d10; align-content: center;">
  <form id="upload-form" enctype="multipart/form-data" style="border:#0e0d10 1px solid; border-radius:5px; box-shadow:#0e0d10 2px 2px 0px 2px; padding:20px;">
    <h2 class="d-flex align-items-center mb-3" style="border:1px solid #0e0d10; padding:20px; border-radius:5px; background-color:#A3C6E5; box-shadow:#0e0d10 1px 2px 0px 2px; -webkit-text-fill-color:#0e0d10; font-weight:200;">Upload Images</h2>
    <div id="drop-zone" class="drop-zone">Drag & drop images here or click to select</div>
    <input type="file" id="image-input" name="images" multiple accept="image/jpeg, image/png, image/jpg" style="display:none;">
    <label for="hastags">Hashtags</label>
    <div class="hashtag-dropdown">
      <div class="selected-hashtags"></div>
      <input type="text" class="form-control" id="hashtag-input" style="border:#0e0d10 1px solid; border-radius:5px; box-shadow:#0e0d10 1px 1px 0px 1.5px; background-color:#f2f086; -webkit-text-fill-color:#0e0d10;" placeholder="Type hashtags...">
      <ul class="hashtag-list">
        <% for (let hastag of hastags) { %>
          <li>#<%=hastag%></li>
        <% } %>
      </ul>
    </div>
    <div class="hastag error"></div>
    <div id="preview-container"></div>
    <button type="submit" class="mt-3" id="upload-button" style="border:1px solid #0e0d10; padding:10px; border-radius:5px; background-color:#A3C6E5; box-shadow:#0e0d10 1px 2px 0px 2px; -webkit-text-fill-color:#0e0d10; font-weight:500; margin-bottom:20px;">Upload</button>
  </form>
</div>
<footer>&#169; House of Pixels OPC Pvt Ltd &#169;</footer>
<script>
  const dropZone = document.getElementById('drop-zone');
  const fileInput = document.getElementById('image-input');
  const previewContainer = document.getElementById('preview-container');
  const selectedHashtags = document.querySelector('.selected-hashtags');
  const hashtagInput = document.getElementById('hashtag-input');
  const hashtagList = document.querySelector('.hashtag-list');
  const selectedHashtagsList = [];
  hashtagList.style.display = 'none';

  dropZone.addEventListener('click', () => fileInput.click());
  dropZone.addEventListener('dragover', (e) => { e.preventDefault(); dropZone.classList.add('hover'); });
  dropZone.addEventListener('dragleave', () => dropZone.classList.remove('hover'));
  dropZone.addEventListener('drop', (e) => { e.preventDefault(); dropZone.classList.remove('hover'); handleFiles(e.dataTransfer.files); });
  fileInput.addEventListener('change', (e) => handleFiles(e.target.files));

  function handleFiles(files) {
    for (const file of files) {
      const item = document.createElement('div');
      item.className = 'preview-item';
      const img = document.createElement('img');
      img.src = URL.createObjectURL(file);
      const progress = document.createElement('progress');
      progress.value = 0; progress.max = 100; progress.className = 'progress';
      item.appendChild(img); item.appendChild(progress);
      previewContainer.appendChild(item);
      file.previewProgress = progress;
      pendingFiles.push(file);
    }
  }

  hashtagInput.addEventListener('input', () => {
    const inputText = hashtagInput.value.toLowerCase();
    const hashtags = Array.from(hashtagList.querySelectorAll('li'));
    hashtagList.style.display = inputText ? 'block' : 'none';
    hashtags.forEach((hashtag) => { const text = hashtag.textContent.toLowerCase(); hashtag.style.display = text.includes(inputText) ? 'block' : 'none'; });
  });
  hashtagList.addEventListener('click', (event) => {
    if (event.target.tagName === 'LI') {
      const text = event.target.textContent;
      if (!selectedHashtagsList.includes(text)) {
        const btn = document.createElement('button');
        btn.textContent = text; btn.className = 'selected-hashtag';
        selectedHashtags.appendChild(btn); selectedHashtagsList.push(text);
      }
      hashtagInput.value = ''; hashtagList.style.display = 'none';
    }
  });
  selectedHashtags.addEventListener('click', (event) => {
    if (event.target.tagName === 'BUTTON') {
      const text = event.target.textContent;
      const idx = selectedHashtagsList.indexOf(text);
      if (idx > -1) selectedHashtagsList.splice(idx, 1);
      event.target.remove();
    }
  });

  const pendingFiles = [];
  async function uploadFile(file) {
    return new Promise((resolve, reject) => {
      const xhr = new XMLHttpRequest();
      const formData = new FormData();
      formData.append('images', file);
      formData.append('hashtags', JSON.stringify(selectedHashtagsList));
      xhr.open('POST', '/upload');
      xhr.upload.addEventListener('progress', (e) => {
        if (e.lengthComputable) file.previewProgress.value = (e.loaded / e.total) * 100;
      });
      xhr.onload = () => { file.previewProgress.value = 100; resolve(); };
      xhr.onerror = reject;
      xhr.send(formData);
    });
  }

  document.getElementById('upload-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    for (const file of pendingFiles) {
      await uploadFile(file).catch(console.error);
    }
    pendingFiles.length = 0;
  });
</script>
</body>
</html>
